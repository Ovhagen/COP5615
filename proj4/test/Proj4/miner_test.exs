defmodule Proj4.MinerTest do
  use ExUnit.Case

  setup do
    %{
	  tx_test: ["3e4bb40f066d195155e74eb0d26d644fbf5cab91",  #Transactions gathered by a miner.
                "ca3bce4f810bca6f68fcecd1b79627c06016f142",
                "ced1f2728fe4e928716a639cda1333af67eafeea",
                "0710260689d3f95eb18bdfb0235ffcf4cd728045"],
    prev_hash: [MerkleTree.hash("test")],  #Taken from the previous block in the chain
    nonce: 1337  #This would be generated by the mine
	 }
  end

  test "Successfully create a block hash in difficulty range", %{tx_test: tx_test, prev_hash: prev_hash, nonce: nonce} do
    tree = MerkleTree.makeMerkle(tx_test)
    block = Block.createBlock(tx_test, tree.root.hash_value, prev_hash, nonce)
    assert(Miner.mine_block(block, nonce, 1) |> List.first() != nil)
  end

  test "Fail a round of block mining", %{tx_test: tx_test, prev_hash: prev_hash, nonce: nonce} do
    tree = MerkleTree.makeMerkle(tx_test)
    block = Block.createBlock(tx_test, tree.root.hash_value, prev_hash, nonce)
    block = Block.setDifficulty(block, 0xFFFF90)
    assert(Miner.mine_block(block, nonce, 100000) |> List.first() == nil)
  end


end
